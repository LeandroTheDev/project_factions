VERSION = 1,

option SafehousePlus.EnableSafehousePoints
{
	type = boolean,
	default = true,
	page = Safehouse,
	translation = SafehousePlus_EnableSafehousePoints,
}

option SafehousePlus.SafehouseHoursPerPoints
{
	type = integer,
	default = 3,
	min = 1,
	max = 999,
	page = Safehouse,
	translation = SafehousePlus_SafehouseHoursPerPoints,
}

option SafehousePlus.SafehouseBasePoints
{
	type = integer,
	default = 1,
	min = 1,
	max = 999,
	page = Safehouse,
	translation = SafehousePlus_SafehouseBasePoints,
}

option SafehousePlus.SafehousePointsPerScore
{
	type = integer,
	default = 1,
	min = 1,
	max = 999,
	page = Safehouse,
	translation = SafehousePlus_SafehousePointsPerScore,
}

option SafehousePlus.ResetPointsWhenNotClaimed
{
	type = boolean,
	default = true,
	page = Safehouse,
	translation = SafehousePlus_ResetPointsWhenNotClaimed,
}

option SafehousePlus.EnableSafehouseCreateKey
{
	type = boolean,
	default = true,
	page = Safehouse,
	translation = SafehousePlus_EnableSafehouseCreateKey,
}

option SafehousePlus.EnableSafehouseRespawn
{
	type = boolean,
	default = true,
	page = Safehouse,
	translation = SafehousePlus_EnableSafehouseRespawn,
}

option SafehousePlus.SpawnpointTimer
{
	type = integer,
	default = 1000,
	min = 0,
	max = 999999999,
	page = Safehouse,
	translation = SafehousePlus_SpawnpointTimer,
}

option SafehousePlus.RespawnCooldown
{
	type = integer,
	default = 30,
	min = -1,
	max = 999999999,
	page = Safehouse,
	translation = SafehousePlus_RespawnCooldown,
}

option SafehousePlus.HealthOnRespawn
{
	type = integer,
	default = 50,
	min = 1,
	max = 100,
	page = Safehouse,
	translation = SafehousePlus_HealthOnRespawn,
}

option SafehousePlus.KeepInventory
{
	type = boolean,
	default = true,
	page = Safehouse,
	translation = SafehousePlus_KeepInventory,
}

option SafehousePlus.EnableSafehouseProtection
{
	type = boolean,
	default = true,
	page = Safehouse,
	translation = SafehousePlus_EnableSafehouseProtection,
}

option SafehousePlus.SafehouseProtectionLimit
{
	type = integer,
	default = 1,
	min = 0,
	max = 99999,
	page = Safehouse,
	translation = SafehousePlus_SafehouseProtectionLimit,
}